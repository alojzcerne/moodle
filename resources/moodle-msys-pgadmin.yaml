---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: pgadmin
  namespace: moodle-sys
spec:
  accessModes:
  - ReadWriteMany
  resources:
    requests:
      storage: 50G
  storageClassName: ocs-storagecluster-cephfs
  volumeMode: Filesystem
---
apiVersion: image.openshift.io/v1
kind: ImageStream
metadata:
  labels:
    app: pgadmin
  name: pgadmin
  namespace: moodle-sys
spec:
  lookupPolicy:
    local: true
  tags:
  - annotations:
      openshift.io/imported-from: central-quay-registry.apps.cdiul-iso.uni-lj.si/moodle/pgadmin:latest
    from:
      kind: DockerImage
      name: central-quay-registry.apps.cdiul-iso.uni-lj.si/moodle/pgadmin:latest
    importPolicy:
      importMode: Legacy
    name: latest
    referencePolicy:
      type: Source
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: pgadmin
  name: pgadmin
  namespace: moodle-sys
spec:
  ports:
  - name: 8080-tcp
    port: 8080
    protocol: TCP
    targetPort: 8080
  sessionAffinity: ClientIP
  selector:
    deployment: pgadmin
---
apiVersion: route.openshift.io/v1
kind: Route
metadata:
  annotations:
    haproxy.router.openshift.io/timeout: 10m
  labels:
    app: pgadmin
  name: pgadmin
  namespace: moodle-sys
spec:
  port:
    targetPort: 8080-tcp
  to:
    kind: Service
    name: pgadmin
  tls:
    termination: edge
---
apiVersion: v1
kind: Secret
metadata:
  name: config-local
  namespace: moodle-sys
type: Opaque
stringData:
  config_local.py: |
    DATA_DIR = '/pgadmin'
    MASTER_PASSWORD_REQUIRED = True
    #AUTHENTICATION_SOURCES = ['oauth2', 'internal']
    AUTHENTICATION_SOURCES = ['oauth2']
    OAUTH2_AUTO_CREATE_USER = True
    OAUTH2_CONFIG = [
      {
      'OAUTH2_NAME': 'azure',
      'OAUTH2_DISPLAY_NAME': 'ULID SSO',
      'OAUTH2_CLIENT_ID': '4434743c-a4a7-4432-b28a-ca6be1e801db',
      'OAUTH2_CLIENT_SECRET': 'tZa8Q~SNgpjxI8A6C_xxL6edNS-PuZPL4rvfmaGg',
      'OAUTH2_TOKEN_URL': 'https://login.microsoftonline.com/a6cc90df-f580-49dc-903f-87af5a75338e/oauth2/v2.0/token',
      'OAUTH2_AUTHORIZATION_URL': 'https://login.microsoftonline.com/a6cc90df-f580-49dc-903f-87af5a75338e/oauth2/v2.0/authorize',
      'OAUTH2_SERVER_METADATA_URL': 'https://login.microsoftonline.com/a6cc90df-f580-49dc-903f-87af5a75338e/v2.0/.well-known/openid-configuration',
      'OAUTH2_API_BASE_URL': 'https://graph.microsoft.com/v1.0/',
      'OAUTH2_USERINFO_ENDPOINT': 'me',
      'OAUTH2_SCOPE': 'User.Read openid email profile',
      'OAUTH2_ICON': 'fa-github',
      'OAUTH2_BUTTON_COLOR': '#e03127',
      'OAUTH2_USERNAME_CLAIM': 'preferred_username'
      }
    ]
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    image.openshift.io/triggers: "[{\"from\":{\"kind\":\"ImageStreamTag\",\"name\":\"pgadmin:latest\"},\"fieldPath\":\"spec.template.spec.containers[?(@.name==\\\"pgadmin\\\")].image\"}]"
    app: pgadmin
  name: pgadmin
  namespace: moodle-sys
spec:
  replicas: 3
  selector:
    matchLabels:
      deployment: pgadmin
  template:
    metadata:
      labels:
        app: pgadmin
        deployment: pgadmin
    spec:
      containers:
      - image: ' '
        imagePullPolicy: IfNotPresent
        name: pgadmin
        ports:
        - containerPort: 8080
          protocol: TCP
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
        volumeMounts:
        - mountPath: /pgadmin
          name: pgadmin
        - mountPath: /usr/pgadmin4/web/config_local.py
          subPath: config_local.py
          name: config-local
        env:
        - name: TZ
          value: Europe/Ljubljana
      volumes:
      - name: pgadmin
        persistentVolumeClaim:
          claimName: pgadmin
      - name: config-local
        secret:
          secretName: config-local
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  labels:
    app: pgadmin
  name: pgadmin
  namespace: moodle-sys
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app: pgadmin
---
